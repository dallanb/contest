"""empty message

Revision ID: e128cb1f9470
Revises: 
Create Date: 2020-08-22 20:03:31.117181

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = 'e128cb1f9470'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contest_status',
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.Enum('pending', 'ready', 'active', 'inactive', name='conteststatusenum'), nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('participant_status',
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.Enum('pending', 'active', 'inactive', name='participantstatusenum'), nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('contest',
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('owner_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('status', sa.Enum('pending', 'ready', 'active', 'inactive', name='conteststatusenum'), nullable=False),
    sa.ForeignKeyConstraint(['status'], ['contest_status.name'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('participant',
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('user_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('contest_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('status', sa.Enum('pending', 'active', 'inactive', name='participantstatusenum'), nullable=False),
    sa.ForeignKeyConstraint(['contest_uuid'], ['contest.uuid'], ),
    sa.ForeignKeyConstraint(['status'], ['participant_status.name'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('sport',
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('ctime', sa.BigInteger(), nullable=True),
    sa.Column('mtime', sa.BigInteger(), nullable=True),
    sa.Column('sport_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('contest_uuid', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.ForeignKeyConstraint(['contest_uuid'], ['contest.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sport')
    op.drop_table('participant')
    op.drop_table('contest')
    op.drop_table('participant_status')
    op.drop_table('contest_status')
    # ### end Alembic commands ###
